<?xml version='1.0' encoding='UTF-8' standalone='no' ?>
<!DOCTYPE DCServerConfig SYSTEM "dcservers.dtd" >

<!-- 
  =======================================================================================
  Project: OpenGTS - Open GPS Tracking System
  URL    : http://www.opengts.org
  File   : dcservers.xml
  =======================================================================================
  Change History:
   2009/09/23  Martin D. Flynn
      -Initial Release
   2011/06/16  Martin D. Flynn
      -Additional comments.
      -Added "packetLenEndOfStream" property to "sipgear".
   2011/07/15  Martin D. Flynn
      -Additional comments.
      -Added "tk10x".
  =======================================================================================
-->

<!-- 
  =======================================================================================
  DCServerConfig tag attributes:
    "bindAddress" - the IP address (or host) interface to which these servers will "bind"
       Typically only necessary if this computer has more than one network interface.
       If this value is blank, then the server will bind to all network interfaces.
    "backlog" - The maximum queue length for incoming connection indications (a request to 
       connect) is set to this backlog value.  If a connection indication arrives when the 
       queue is full, the connection is refused.  (see "java.net.ServerSocket")
    "portOffset" - An offset value to add to the specified ports before setting up the
       port 'listeners'.  This value should typically remain '0'.
  =======================================================================================
-->

<!-- ================================================================================ -->
<DCServerConfig
    bindAddress=""
    backlog=""
    includeDir="dcservers"
    >
    <!-- ================================================================================
     === Standard properties:
     ===    uniqueIdPrefix          - [String]
     ===    commandProtocol         - [tcp|udp|sms]
     ===    ackResponsePort         - [int]
     ===    clientCommandPort       - [int]
     ===    clientCommandPort.udp   - [int]
     ===    clientCommandPort.tcp   - [int]
     ===    tcpIdleTimeoutMS        - [long]
     ===    tcpPacketTimeoutMS      - [long]
     ===    tcpSessionTimeoutMS     - [long]
     ===    udpIdleTimeoutMS        - [long]
     ===    udpPacketTimeoutMS      - [long]
     ===    udpSessionTimeoutMS     - [long]
     ===    minimumSpeedKPH         - [double]
     ===    estimateOdometer        - [boolean]
     ===    simulateGeozones        - [boolean]
     ===    simulateDigitalInputs   - [boolean]
     ===    minimumMovedMeters      - [double]
     ===    saveRawDataPackets      - [boolean]
     ===    startStopSupported      - [boolean]
     ===    statusLocationInMotion  - [boolean] Translate Location to InMotion
     -->

    <!-- ================================================================================ -->
    <Include file="dcserver_template.xml" optional="true"/>
    <DCServer name="template">
    
        <!--
         === DCS Description
         -->
        <Description><![CDATA[
            Example Template Server
            ]]></Description>
            
        <!-- 
         === Possible Unique-ID prefixes ("*" means that the mobile-id is used as-is)
         === Example: If the mobile-id is "123456789012345", then the "Unique ID" value
         === set in the Device admin page can be one of the following:
         ===   imei_123456789012345
         ===   123456789012345
         ===   <etc.>
         -->
        <UniqueIDPrefix><![CDATA[
            template_
            imei_
            *
            ]]></UniqueIDPrefix>
            
        <!-- 
         === Listen ports
         -->
        <ListenPorts 
            tcpPort="31200" 
            udpPort="31200"
            />
            
        <!--
         === DCS runtime properties
         -->
        <Properties>
            <!-- <Property key="parseFormat">1</Property>               -->
            <!-- <Property key="minimumSpeedKPH">4.0</Property>         -->
            <!-- <Property key="estimateOdometer">true</Property>       -->
            <!-- <Property key="simulateGeozones">true</Property>       -->
            <!-- <Property key="simulateDigitalInputs">0xFF</Property>  -->
            <!-- <Property key="tcpIdleTimeoutMS">5000</Property>       -->
            <!-- <Property key="tcpPacketTimeoutMS">10000</Property>    -->
            <!-- <Property key="tcpSessionTimeoutMS">20000</Property>   -->
            </Properties>
        
    </DCServer>

    <!-- ================================================================================ -->
    <DCServer name="gtsdmtp">
    
        <!--
         === DCS Description
         -->
        <Description><![CDATA[
            OpenDMTP
            ]]></Description>
            
        <!-- 
         === Listen ports
         -->
        <ListenPorts 
            tcpPort="31000" 
            udpPort="31000"
            />
            
        <!--
         === DCS runtime properties
         -->
        <Properties>
            <Property key="firstSessionNegotiation">true</Property>
            <Property key="udpReturnResponse">true</Property>
            <Property key="simulateGeozones">false</Property>
            <!-- <Property key="customEvent.55">1|H|0|2 2|H|0|4 6|H|0|8 8|H|0|2 9|H|0|2 10|H|0|3 11|H|0|3 12|H|0|4 93|H|0|2 88|H|0|2 82|H|0|4 4|H|0|1</Property> -->
            </Properties>
            
    </DCServer>

    <!-- ================================================================================ -->
    <DCServer name="aspicore">
    
        <!--
         === DCS Description
         -->
        <Description><![CDATA[
            Aspicore GSM Tracker
            ]]></Description>
            
        <!-- 
         === Possible Unique-ID prefixes ("*" means that the mobile-id is used as-is)
         === Example: If the mobile-id is "123456789012345", then the "Unique ID" value
         === set in the Device admin page can be one of the following:
         ===   imei_123456789012345
         ===   123456789012345
         ===   <etc.>
         -->
        <UniqueIDPrefix><![CDATA[
            asp_
            s60_
            imei_
            *
            ]]></UniqueIDPrefix>
            
        <!-- 
         === Listen ports
         -->
        <ListenPorts 
            tcpPort="31265" 
            udpPort="31265"
            />
            
        <!--
         === DCS runtime properties
         -->
        <Properties>
        
            <Property key="minimumSpeedKPH">3.0</Property>
            <!--
             === "minimumSpeedKPH" - The minimum speed value, below which the device will
             === be assumed to be stopped, and the 'speed' will be explicitly set to '0.0'.
             -->

            <Property key="statusLocationInMotion">true</Property>
            <!--
             === "statusLocationInMotion" - If true, the DCS will replace an event with a
             === STATUS_LOCATION status code with a STATUS_MOTION_IN_MOTION status code, if
             === the speed of the vehicle is greater than zero.
             -->

            <Property key="minimumMovedMeters">0</Property>
            <!--
             === "minimumMovedMeters" - if > '0', subsequent received events will be omitted if
             === they are within the specified number of meters to the previous event.  Useful
             === for eliminating multiple events at the same location, when the device continues
             === to periodically report a location even if the device is stopped.
             -->
             
            <Property key="estimateOdometer">false</Property>
            <!-- 
             === "estimateOdometer" - If true, the DCS will calculate the current event odometer
             === based on the distance traveled since the last valid GPS location
             -->
             
            <Property key="simulateGeozones">true</Property>
            <!--
             === "simulateGeozones" - If true, the DCS will check for geozone arrivals/departures
             === and insert the appropriate arrive/depart events.
             -->
 
            <Property key="tcpIdleTimeoutMS">0</Property>
            <Property key="tcpPacketTimeoutMS">0</Property>
            <Property key="tcpSessionTimeoutMS">0</Property>
            <!-- 
             === TCP Connection timeouts
             -->

            <Property key="udpIdleTimeoutMS">3000</Property>
            <Property key="udpPacketTimeoutMS">4000</Property>
            <Property key="udpSessionTimeoutMS">10000</Property>
            <!-- 
             === UDP Connection timeouts
             -->

            </Properties>
            
    </DCServer>

    <!-- ================================================================================ -->
    <DCServer name="icare">
    
        <!--
         === DCS Description
         -->
        <Description><![CDATA[
            ICare
            ]]></Description>
            
        <!-- 
         === Possible Unique-ID prefixes ("*" means that the mobile-id is used as-is)
         === Example: If the mobile-id is "123456789012345", then the "Unique ID" value
         === set in the Device admin page can be one of the following:
         ===   imei_123456789012345
         ===   123456789012345
         ===   <etc.>
         -->
        <UniqueIDPrefix><![CDATA[
            icare_
            imei_
            *
            ]]></UniqueIDPrefix>
            
        <!-- 
         === Listen ports
         -->
        <ListenPorts 
            tcpPort="31160" 
            udpPort="31160"
            />
            
        <!--
         === DCS runtime properties
         -->
        <Properties>
            </Properties>
            
    </DCServer>

    <!-- ================================================================================ -->
    <DCServer name="tk10x">
    
        <!--
         === DCS Description
         -->
        <Description><![CDATA[
            Generic TK102/TK103
            ]]></Description>
            
        <!-- 
         === Possible Unique-ID prefixes ("*" means that the mobile-id is used as-is)
         === Example: If the mobile-id is "123456789012345", then the "Unique ID" value
         === set in the Device admin page can be one of the following:
         ===   imei_123456789012345
         ===   123456789012345
         ===   <etc.>
         -->
        <UniqueIDPrefix><![CDATA[
            tk_
            sip_
            imei_
            *
            ]]></UniqueIDPrefix>
            
        <!-- 
         === Listen ports
         -->
        <ListenPorts 
            tcpPort="31272" 
            udpPort="31272"
            />
            
        <!--
         === DCS runtime properties
         -->
        <Properties>
        
            <Property key="minimumSpeedKPH">3.0</Property>
            <!--
             === "minimumSpeedKPH" - The minimum speed value, below which the device will
             === be assumed to be stopped, and the 'speed' will be explicitly set to '0.0'.
             -->

            <Property key="statusLocationInMotion">true</Property>
            <!--
             === "statusLocationInMotion" - If true, the DCS will replace an event with a
             === STATUS_LOCATION status code with a STATUS_MOTION_IN_MOTION status code, if
             === the speed of the vehicle is greater than zero.
             -->

            <Property key="minimumMovedMeters">0</Property>
            <!--
             === "minimumMovedMeters" - if > '0', subsequent received events will be omitted if
             === they are within the specified number of meters to the previous event.  Useful
             === for eliminating multiple events at the same location, when the device continues
             === to periodically report a location even if the device is stopped.
             -->
             
            <Property key="estimateOdometer">true</Property>
            <!-- 
             === "estimateOdometer" - If true, the DCS will calculate the current event odometer
             === based on the distance traveled since the last valid GPS location
             -->
             
            <Property key="simulateGeozones">true</Property> <!-- if supported -->
            <!--
             === "simulateGeozones" - If true, the DCS will check for geozone arrivals/departures
             === and insert the appropriate arrive/depart events.
             -->
 
            <Property key="packetLenEndOfStream">false</Property>
            <!--
             === "packetLenEndOfStream" - If true, the DCS will read until the end of the session
             === input stream before packet contents.  When set to true, only a single packet is
             === processed per TCP/UDP session.  If false, the input stream will be examined for
             === a matching line-terminating character (such as a line-feed).  When false, multiple
             === incoming packets can be handled per TCP/UDP session, as long as each packet has
             === a proper terminating character.
             -->
             
            <Property key="tcpIdleTimeoutMS">60000</Property>
            <Property key="tcpPacketTimeoutMS">5000</Property>
            <Property key="tcpSessionTimeoutMS">60000</Property>
            <!-- 
             === TCP Connection timeouts
             -->

            <Property key="udpIdleTimeoutMS">3000</Property>
            <Property key="udpPacketTimeoutMS">4000</Property>
            <Property key="udpSessionTimeoutMS">10000</Property>
            <!-- 
             === UDP Connection timeouts
             -->

            </Properties>
            
        <!-- 
         === DCS EventCode to StatusCode mapping 
         -->
        <EventCodeMap enabled="false">
            </EventCodeMap>
            
        <Commands dispatchPort="0">
            <!-- Note: To see these commands, property "deviceInfo.showSmsButton" may need 
             === to be set 'true' in "private.xml" (or "private/private_common.xml") -->
             
            <!-- ACL -->
            <AclName>acl.dcs.tk10x</AclName>
            
            <!-- Locate SMS (Ping) -->
            <Command name="LocateSMS" enabled="false">
                <Type>map,admin</Type>
                <Description>SMS Locate</Description>
                <!-- fill in this value with the proper command string -->
                <String protocol="sms"><![CDATA[WhereAreYou?]]></String>
                <StatusCode></StatusCode>
                </Command>
                
            <!-- Send General Command via (should be disabled for production) -->
            <Command name="CommandSMS" enabled="false">
                <Type>map,admin</Type>
                <Description>Send Text (SMS)</Description>
                <String protocol="sms"><![CDATA[${arg}]]></String>
                <StatusCode></StatusCode>
                </Command>
                
        </Commands>
        
    </DCServer>

    <!-- ================================================================================ -->
    <DCServer name="sipgear">
    
        <!--
         === DCS Description
         -->
        <Description><![CDATA[
            ZhongShan SIPGEAR Technology Co, Ltd.
            ]]></Description>
            
        <!-- 
         === Possible Unique-ID prefixes ("*" means that the mobile-id is used as-is)
         === Example: If the mobile-id is "123456789012345", then the "Unique ID" value
         === set in the Device admin page can be one of the following:
         ===   imei_123456789012345
         ===   123456789012345
         ===   <etc.>
         -->
        <UniqueIDPrefix><![CDATA[
            sip_
            imei_
            *
            ]]></UniqueIDPrefix>
            
        <!-- 
         === Listen ports
         -->
        <ListenPorts 
            tcpPort="31170" 
            udpPort="31170"
            />
            
        <!--
         === DCS runtime properties
         -->
        <Properties>
        
            <Property key="minimumSpeedKPH">3.0</Property>
            <!--
             === "minimumSpeedKPH" - The minimum speed value, below which the device will
             === be assumed to be stopped, and the 'speed' will be explicitly set to '0.0'.
             -->

            <Property key="statusLocationInMotion">true</Property>
            <!--
             === "statusLocationInMotion" - If true, the DCS will replace an event with a
             === STATUS_LOCATION status code with a STATUS_MOTION_IN_MOTION status code, if
             === the speed of the vehicle is greater than zero.
             -->

            <Property key="minimumMovedMeters">0</Property>
            <!--
             === "minimumMovedMeters" - if > '0', subsequent received events will be omitted if
             === they are within the specified number of meters to the previous event.  Useful
             === for eliminating multiple events at the same location, when the device continues
             === to periodically report a location even if the device is stopped.
             -->
             
            <Property key="estimateOdometer">true</Property>
            <!-- 
             === "estimateOdometer" - If true, the DCS will calculate the current event odometer
             === based on the distance traveled since the last valid GPS location
             -->
             
            <Property key="simulateGeozones">true</Property> <!-- if supported -->
            <!--
             === "simulateGeozones" - If true, the DCS will check for geozone arrivals/departures
             === and insert the appropriate arrive/depart events.
             -->
 
            <Property key="packetLenEndOfStream">false</Property>
            <!--
             === "packetLenEndOfStream" - If true, the DCS will read until the end of the session
             === input stream before packet contents.  When set to true, only a single packet is
             === processed per TCP/UDP session.  If false, the input stream will be examined for
             === a matching line-terminating character (such as a line-feed).  When false, multiple
             === incoming packets can be handled per TCP/UDP session, as long as each packet has
             === a proper terminating character.
             -->
             
            <Property key="tcpIdleTimeoutMS">60000</Property>
            <Property key="tcpPacketTimeoutMS">5000</Property>
            <Property key="tcpSessionTimeoutMS">60000</Property>
            <!-- 
             === TCP Connection timeouts
             -->

            <Property key="udpIdleTimeoutMS">3000</Property>
            <Property key="udpPacketTimeoutMS">4000</Property>
            <Property key="udpSessionTimeoutMS">10000</Property>
            <!-- 
             === UDP Connection timeouts
             -->

            </Properties>
            
        <!-- 
         === DCS EventCode to StatusCode mapping 
         -->
        <EventCodeMap enabled="false">
            </EventCodeMap>
            
        <Commands dispatchPort="0">
            <!-- Note: To see these commands, property "deviceInfo.showSmsButton" may need 
             === to be set 'true' in "private.xml" (or "private/private_common.xml") -->
             
            <!-- ACL -->
            <AclName>acl.dcs.sipgear</AclName>
            
            <!-- Locate SMS (Ping) -->
            <Command name="LocateSMS" enabled="false">
                <Type>map,admin</Type>
                <Description>SMS Locate</Description>
                <!-- fill in this value with the proper command string -->
                <String protocol="sms"><![CDATA[WhereAreYou?]]></String>
                <StatusCode></StatusCode>
                </Command>
                
            <!-- Send General Command via (should be disabled for production) -->
            <Command name="CommandSMS" enabled="false">
                <Type>map,admin</Type>
                <Description>Send Text (SMS)</Description>
                <String protocol="sms"><![CDATA[${arg}]]></String>
                <StatusCode></StatusCode>
                </Command>
                
        </Commands>
        
    </DCServer>

    <!-- ================================================================================ -->
    
    <DCServer name="taip">
    
        <!--
         === DCS Description
         -->
        <Description><![CDATA[
            TAIP (Trimble ASCII Interface Protocol)
            ]]></Description>
            
        <!-- 
         === Possible Unique-ID prefixes ("*" means that the mobile-id is used as-is)
         === Example: If the mobile-id is "123456789012345", then the "Unique ID" value
         === set in the Device admin page can be one of the following:
         ===   imei_123456789012345
         ===   123456789012345
         ===   <etc.>
         -->
        <UniqueIDPrefix><![CDATA[
            taip_
            ]]></UniqueIDPrefix>
            
        <!-- 
         === Listen ports
         -->
        <ListenPorts 
            tcpPort="31275" 
            udpPort="31275"
            />
            
        <!--
         === DCS runtime properties
         -->
        <Properties>

            <Property key="minimumSpeedKPH">4.0</Property>
            <!--
             === "minimumSpeedKPH" - The minimum speed value, below which the device will
             === be assumed to be stopped, and the 'speed' will be explicitly set to '0.0'.
             -->

            <Property key="estimateOdometer">true</Property>
            <!-- 
             === "estimateOdometer" - If true, the DCS will calculate the current event odometer
             === based on the distance traveled since the last valid GPS location
             -->
             
            <Property key="simulateGeozones">true</Property>
            <!--
             === "simulateGeozones" - If true, the DCS will check for geozone arrivals/departures
             === and insert the appropriate arrive/depart events.
             -->
 
            <Property key="tcpIdleTimeoutMS">10000</Property>
            <Property key="tcpPacketTimeoutMS">10000</Property>
            <Property key="tcpSessionTimeoutMS">300000</Property>
            <Property key="clientCommandPort.tcp">0</Property>
            <!-- 
             === TCP Connection timeouts
             -->

            <Property key="clientCommandPort.udp">0</Property>
            <!-- 
             === UDP Connection timeouts
             -->

            </Properties>
            
        <!-- 
         === DCS EventCode to StatusCode mapping 
         -->
        <EventCodeMap enabled="false">
            </EventCodeMap>
            
    </DCServer>

    <!-- ================================================================================ -->

</DCServerConfig>

